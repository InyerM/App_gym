<UserControl x:Class="App_Gym.Controls.UserControlMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:App_Gym.Controls"
             mc:Ignorable="d" Name="thist">
    <UserControl.Resources>

        <!-- Start: Menu Icon Style -->
        <Style x:Key="MenuIconStyle" TargetType="{x:Type Path}">
            <Setter Property="Fill" Value="{DynamicResource SecundaryIconColor}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" Value="True">
                    <Setter Property="Fill" Value="{DynamicResource TextFourthColor}"/>
                </DataTrigger>

            </Style.Triggers>
        </Style>
        <!-- End: Menu Icon Style -->

        <!-- Start: Menu Text Style -->
        <Style x:Key="MenuTextStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource SecundaryIconColor}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="Regular"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource TextFourthColor}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!-- End: Menu Text Style -->

        <!-- Start: Menu Item Style -->
        <Style x:Key="MenuButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="{DynamicResource BorderThickness}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="80"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{Binding Padding, ElementName=thist}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="60"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <!-- Icon -->
                                <Path Data="{Binding Icon, ElementName=thist, FallbackValue={StaticResource DefaultIcon}, TargetNullValue={StaticResource DefaultIcon}}" Margin="{Binding IconMargin, FallbackValue='0,0,0,0', TargetNullValue='20,0,0,0'}"
                                      Stretch="Uniform" Width="{Binding IconWidth, ElementName=thist, FallbackValue=20,TargetNullValue=20}" Style="{StaticResource MenuIconStyle}"/>

                                <!-- Menu Text -->
                                <TextBlock Style="{StaticResource MenuTextStyle}" FontWeight="Regular" FontSize="15" Grid.Row="1" Text="{Binding Text, ElementName=thist, FallbackValue=MenuText, TargetNullValue=MenuText}" Margin="0,0,0,0" HorizontalAlignment="Center"/>

                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- To set IsChecked property to true on default -->
                            <DataTrigger Binding="{Binding IsSelected, ElementName=thist}" Value="True">
                                <Setter Property="IsChecked" Value="True"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- End: Menu Item Style -->

    </UserControl.Resources>

    <Grid>
        <RadioButton Style="{StaticResource MenuButtonStyle}" GroupName="{Binding GroupName, ElementName=thist}"/>
    </Grid>
</UserControl>
