<Window x:Class="App_Gym.MainWindow"
        xmlns:ctls="clr-namespace:App_Gym.Controls" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:App_Gym"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d" Name="home"
        Title="Base de datos Gym" Height="650" Width="1000"
        WindowStartupLocation="CenterScreen" WindowStyle="None"
        Background="Transparent" AllowsTransparency="True"
        ResizeMode="NoResize" FontFamily="Poppins">
    <Border Background="{DynamicResource PrimaryBackgroundColor}"
            CornerRadius="10">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0"
                    Background="{DynamicResource SecundaryBackgroundColor}"
                    CornerRadius="10, 0, 0, 10">
                <Grid x:Name="GridIzq" Width="60">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Border 
                              Margin="15 0 0 0"
                              Width="32" Height="24"
                              HorizontalAlignment="Left">
                            <materialDesign:PackIcon Kind="WeightLifter" Foreground="{DynamicResource PrimaryTextColor}"
                                                     Height="30" Width="30" />
                        </Border>

                        <Label Content="ATLAS GYM"
                               Foreground="{DynamicResource PrimaryTextColor}"
                               FontWeight="Bold"
                               FontSize="18"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Left"
                               Margin="60 0 0 0"/>
                    </Grid>
                    <StackPanel Grid.Row="1" Margin="-1 40 0 20">
                        <Button x:Name="btnHome" Style="{DynamicResource PopupButtonStyle}"  MouseEnter="btnHome_MouseEnter" MouseLeave="btnHome_MouseLeave" Click="btnHome_Click">
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource PrimaryRedColor}" Icon="{DynamicResource homeI}" IconWidth="16" Text="Inicio" VerticalAlignment="Center"/>
                        </Button>
                        <Button x:Name="btnSearch" Style="{DynamicResource PopupButtonStyle}"  MouseEnter="btnSearch_MouseEnter" MouseLeave="btnSearch_MouseLeave" Click="btnSearch_Click">
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource PrimaryRedColor}" Icon="{DynamicResource searchI}" IconWidth="16" Text="Mostrar" VerticalAlignment="Center"/>
                        </Button>
                        <Button x:Name="btnSettings" Style="{DynamicResource PopupButtonStyle}"  MouseEnter="btnSettings_MouseEnter" MouseLeave="btnSettings_MouseLeave" Click="btnSettings_Click">
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource PrimaryRedColor}" Icon="{DynamicResource Settings}" IconWidth="16" Text="Opciones" VerticalAlignment="Center"/>
                        </Button>
                    </StackPanel>

                    <Popup x:Name="Popup"  AllowsTransparency="True"  HorizontalOffset="0" VerticalOffset="10">
                        <ctls:UserPopup x:Name="Header" Foreground="{DynamicResource PrimaryTextColor}"/>
                    </Popup>
                </Grid>
            </Border>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <ToggleButton x:Name="Tg_Btn" Grid.Column="1" VerticalAlignment="Center" Style="{DynamicResource iToggleButtonStyle}" HorizontalAlignment="Left" BorderThickness="0" Background="Transparent" Margin="10,15,0,15" Height="30" Width="30">
                    <ToggleButton.Triggers>
                        <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                            <BeginStoryboard>
                                <Storyboard x:Name="HideStackPanel">
                                    <DoubleAnimation Storyboard.TargetName="GridIzq" Storyboard.TargetProperty="Width" BeginTime="0:0:0" From="210" To="60" Duration="0:0:0.5">
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="ToggleButton.Checked">
                            <BeginStoryboard>
                                <Storyboard x:Name="ShowStackPanel">
                                    <DoubleAnimation Storyboard.TargetName="GridIzq" Storyboard.TargetProperty="Width" BeginTime="0:0:0" From="60" To="210" Duration="0:0:0.5">
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ToggleButton.Triggers>
                </ToggleButton>

                <Button Width="30" Height="30" Style="{DynamicResource IconButtonBackForward}" HorizontalAlignment="Left" Margin="80 0 0 0" Content="{DynamicResource leftArrow}" x:Name="btnBack" Click="btnBack_Click"/>
                <Button Width="30" Height="30" Style="{DynamicResource IconButtonBackForward}" HorizontalAlignment="Left" Margin="110 0 0 0" Content="{DynamicResource rightArrow}" x:Name="btnForward" Click="btnForward_Click"/>

                <!-- Start: Button Close | Restore | Minimize -->
                <StackPanel Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,5,10,0" Height="30" Orientation="Horizontal" FlowDirection="RightToLeft" Grid.RowSpan="2">
                    <Button x:Name="btnClose" Style="{StaticResource IconButtonsStyle}" Content="{DynamicResource close}" Click="btnClose_Click" Tag="IsCloseButton"/>
                    <Button x:Name="btnRestore" Margin="5,0" Click="btnRestore_Click" Cursor="Hand">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource IconButtonsStyle}">
                                <Setter Property="Content" Value="{DynamicResource maximize}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=home, Path=WindowState}" Value="Maximized">
                                        <Setter Property="Content" Value="{DynamicResource restore}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btnMinimize" Style="{DynamicResource IconButtonsStyle}" Content="{DynamicResource minimize}" Click="btnMinimize_Click"/>
                </StackPanel>
                <!-- End: Button Close | Restore | Minimize -->

                <Frame Grid.Row="1"
                       Name="fContainer"
                       Margin="20"
                       NavigationUIVisibility="Hidden">

                </Frame>
            </Grid>
        </Grid>
    </Border>
</Window>