<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">


    <Style x:Key="CeilStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource TextSecundaryColor}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="15"/>
    </Style>

    <Style x:Key="ButtonEdit" TargetType="Button">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{DynamicResource TertiaryBackgroundColor}" CornerRadius="5">

                        <Path x:Name="ico" Data="{TemplateBinding Content}" Width="15" Height="15" Fill="{DynamicResource PrimaryIconColor}" Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ico" Property="Fill" Value="#FFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonAceptCancel" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{DynamicResource TertiaryRedColor}" CornerRadius="10" Padding="10">

                        <TextBlock x:Name="block" Text="{TemplateBinding Tag}" FontSize="20" FontWeight="Bold" FontFamily="Poppins" Foreground="{DynamicResource PrimaryTextColor}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource FourthRedColor}" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconStyle" TargetType="{x:Type Path}">
        <Setter Property="Fill" Value="{DynamicResource SecundaryIconColor}"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBox}}" Value="True">
                <Setter Property="Fill" Value="{DynamicResource TextSecundaryColor}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsFocused, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBox}}" Value="True">
                <Setter Property="Fill" Value="{DynamicResource PrimaryTextColor}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonAcept" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="Transparent" CornerRadius="10" Padding="10">

                        <TextBlock x:Name="block" Text="{TemplateBinding Tag}" FontSize="16" FontWeight="Bold" FontFamily="Poppins" Foreground="{DynamicResource TextSecundaryColor}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource DialogButtonBackground}" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <materialDesign:DialogHost Identifier="RootDialog" x:Key="dialogHelp">
        <materialDesign:DialogHost.DialogContent>
            <Grid>
                <TextBlock Text="hola"/>
            </Grid>
        </materialDesign:DialogHost.DialogContent>
    </materialDesign:DialogHost>

</ResourceDictionary>